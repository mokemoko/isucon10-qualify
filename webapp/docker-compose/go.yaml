version: "3"
services:
  mysql:
    image: mysql:8
    volumes:
      - ../mysql/db:/docker-entrypoint-initdb.d
      - ../../provisioning/ansible/roles/web-bootstrap/files/my.cnf:/etc/mysql/conf.d/my.cnf
      - ../../provisioning/ansible/roles/web-bootstrap/files/slow-mysqld.cnf:/etc/mysql/conf.d/slowquery.cnf
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: isuumo
      MYSQL_USER: isucon
      MYSQL_PASSWORD: isucon
    ports:
      - "3306:3306"
  xray-daemon:
    image: amazon/aws-xray-daemon:3.x
    ports:
      - "2000:2000/udp"
    command: 
      - "-o" # Don't check for EC2 instance metadata.
    volumes:
      - ~/.aws:/home/xray/.aws:ro
    environment:
      AWS_REGION: ap-northeast-1
      AWS_PROFILE: risucon
  api-server:
    build: ../go
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - tcp://mysql:3306
    environment:
      MYSQL_DBNAME: isuumo
      MYSQL_USER: isucon
      MYSQL_PASS: isucon
      MYSQL_HOST: mysql
      SERVER_PORT: 1323
      AWS_XRAY_DAEMON_ADDRESS: "xray-daemon:2000"
    ports:
      - "1323:1323"
    depends_on:
      - mysql
      - xray-daemon
    command: /go/src/isuumo/isuumo

  frontend:
    build: ../frontend
    volumes:
      - ../nginx/out:/frontend/out

  nginx:
    build: ../nginx
    volumes:
        - ../../provisioning/ansible/roles/web-bootstrap/files/nginx.conf.template:/etc/nginx/nginx.conf.template
        - ../logs/nginx:/var/log/nginx
        - ../nginx/conf.d:/etc/nginx/conf.d
        - ../nginx/out:/www/data
    ports:
      - "8080:80"
    entrypoint:
      - dockerize
      - -timeout
      - 60s
      - -wait
      - http://api-server:1323/api/estate/search/condition
    environment:
      API_SERVER: api-server
    depends_on:
      - frontend
    command: >
      /bin/sh -c
      "envsubst '
      $$API_SERVER
      '< /etc/nginx/nginx.conf.template
      > /etc/nginx/nginx.conf
      && nginx -g 'daemon off;'"
